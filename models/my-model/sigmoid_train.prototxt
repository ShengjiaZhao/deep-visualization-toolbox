name: "CaffeNet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "ilsvrc12/imagenet_mean.binaryproto"
  }
# mean pixel / channel-wise mean instead of mean image
#  transform_param {
#    crop_size: 227
#    mean_value: 104
#    mean_value: 117
#    mean_value: 123
#    mirror: true
#  }
  data_param {
    source: "/home/ubuntu/sdf/imagenet/ilsvrc12_train_lmdb"
    batch_size: 80
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "ilsvrc12/imagenet_mean.binaryproto"
  }
# mean pixel / channel-wise mean instead of mean image
#  transform_param {
#    crop_size: 227
#    mean_value: 104
#    mean_value: 117
#    mean_value: 123
#    mirror: true
#  }
  data_param {
    source: "/home/ubuntu/sdf/imagenet/ilsvrc12_val_lmdb"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
#layer {
#  name: "scale_param1"
#  type: "DummyData"
#  top: "scale_param1"
#  dummy_data_param {
#    shape {
#      dim: 0
#    }
#    data_filler {
#      type: "constant"
#      value: 0.1
#    }
#  }
#}
#layer {
#  name: "scale_param2"
#  type: "DummyData"
#  top: "scale_param2"
#  dummy_data_param {
#    shape {
#      dim: 0
#    }
#    data_filler {
#      type: "constant"
#      value: 10
#    }
#  }
#}

layer {
  name: "scale1_1"
  type: "Scale"
  bottom: "conv1"
  # bottom: "scale_param1"
  top: "scale1_1"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "sigmoid1"
  type: "Sigmoid"
  bottom: "scale1_1"
  top: "sigmoid1"
}
layer {
  name: "bias1"
  type: "Bias"
  bottom: "sigmoid1"
  top: "bias1"
  bias_param {
    num_axes: 0
    filler {
      type: "constant"
      value: -0.5
    }
  }
}
layer {
  name: "scale1_2"
  type: "Scale"
  bottom: "bias1"
  #bottom: "scale_param2"
  top: "scale1_2"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "scale1_2"
  top: "relu1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "relu1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "scale2_1"
  type: "Scale"
  bottom: "conv2"
  top: "scale2_1"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "sigmoid2"
  type: "Sigmoid"
  bottom: "scale2_1"
  top: "sigmoid2"
}
layer {
  name: "bias2"
  type: "Bias"
  bottom: "sigmoid2"
  top: "bias2"
  bias_param {
    num_axes: 0
    filler {
      type: "constant"
      value: -0.5
    }
  }
}
layer {
  name: "scale2_2"
  type: "Scale"
  bottom: "bias2"
  top: "scale2_2"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "scale2_2"
  top: "relu2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "relu2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "scale3_1"
  type: "Scale"
  bottom: "conv3"
  top: "scale3_1"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "sigmoid3"
  type: "Sigmoid"
  bottom: "scale3_1"
  top: "sigmoid3"
}
layer {
  name: "bias3"
  type: "Bias"
  bottom: "sigmoid3"
  top: "bias3"
  bias_param {
    num_axes: 0
    filler {
      type: "constant"
      value: -0.5
    }
  }
}
layer {
  name: "scale3_2"
  type: "Scale"
  bottom: "bias3"
  top: "scale3_2"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "scale3_2"
  top: "relu3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "relu3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "scale4_1"
  type: "Scale"
  bottom: "conv4"
  top: "scale4_1"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "sigmoid4"
  type: "Sigmoid"
  bottom: "scale4_1"
  top: "sigmoid4"
}
layer {
  name: "bias4"
  type: "Bias"
  bottom: "sigmoid4"
  top: "bias4"
  bias_param {
    num_axes: 0
    filler {
      type: "constant"
      value: -0.5
    }
  }
}
layer {
  name: "scale4_2"
  type: "Scale"
  bottom: "bias4"
  top: "scale4_2"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "scale4_2"
  top: "relu4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "relu4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "scale5_1"
  type: "Scale"
  bottom: "conv5"
  top: "scale5_1"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "sigmoid5"
  type: "Sigmoid"
  bottom: "scale5_1"
  top: "sigmoid5"
}
layer {
  name: "bias5"
  type: "Bias"
  bottom: "sigmoid5"
  top: "bias5"
  bias_param {
    num_axes: 0
    filler {
      type: "constant"
      value: -0.5
    }
  }
}
layer {
  name: "scale5_2"
  type: "Scale"
  bottom: "bias5"
  top: "scale5_2"
  scale_param {
    num_axes: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "scale5_2"
  top: "relu5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "relu5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
